//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UI.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LandLotDTO", Namespace="http://schemas.datacontract.org/2004/07/Service.DTO")]
    [System.SerializableAttribute()]
    public partial class LandLotDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double AreaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CadastralNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ExploitationTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LandCategoryIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LocationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MonetaryValuationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OwnershipTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PurposeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SoilIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StateRegistrationInfoIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Area {
            get {
                return this.AreaField;
            }
            set {
                if ((this.AreaField.Equals(value) != true)) {
                    this.AreaField = value;
                    this.RaisePropertyChanged("Area");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CadastralNumber {
            get {
                return this.CadastralNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.CadastralNumberField, value) != true)) {
                    this.CadastralNumberField = value;
                    this.RaisePropertyChanged("CadastralNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ExploitationTypeId {
            get {
                return this.ExploitationTypeIdField;
            }
            set {
                if ((this.ExploitationTypeIdField.Equals(value) != true)) {
                    this.ExploitationTypeIdField = value;
                    this.RaisePropertyChanged("ExploitationTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LandCategoryId {
            get {
                return this.LandCategoryIdField;
            }
            set {
                if ((this.LandCategoryIdField.Equals(value) != true)) {
                    this.LandCategoryIdField = value;
                    this.RaisePropertyChanged("LandCategoryId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LocationId {
            get {
                return this.LocationIdField;
            }
            set {
                if ((this.LocationIdField.Equals(value) != true)) {
                    this.LocationIdField = value;
                    this.RaisePropertyChanged("LocationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MonetaryValuationId {
            get {
                return this.MonetaryValuationIdField;
            }
            set {
                if ((this.MonetaryValuationIdField.Equals(value) != true)) {
                    this.MonetaryValuationIdField = value;
                    this.RaisePropertyChanged("MonetaryValuationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OwnershipTypeId {
            get {
                return this.OwnershipTypeIdField;
            }
            set {
                if ((this.OwnershipTypeIdField.Equals(value) != true)) {
                    this.OwnershipTypeIdField = value;
                    this.RaisePropertyChanged("OwnershipTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PurposeId {
            get {
                return this.PurposeIdField;
            }
            set {
                if ((this.PurposeIdField.Equals(value) != true)) {
                    this.PurposeIdField = value;
                    this.RaisePropertyChanged("PurposeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SoilId {
            get {
                return this.SoilIdField;
            }
            set {
                if ((this.SoilIdField.Equals(value) != true)) {
                    this.SoilIdField = value;
                    this.RaisePropertyChanged("SoilId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StateRegistrationInfoId {
            get {
                return this.StateRegistrationInfoIdField;
            }
            set {
                if ((this.StateRegistrationInfoIdField.Equals(value) != true)) {
                    this.StateRegistrationInfoIdField = value;
                    this.RaisePropertyChanged("StateRegistrationInfoId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExploitationTypeDTO", Namespace="http://schemas.datacontract.org/2004/07/Service.DTO")]
    [System.SerializableAttribute()]
    public partial class ExploitationTypeDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LocationDTO", Namespace="http://schemas.datacontract.org/2004/07/Service.DTO")]
    [System.SerializableAttribute()]
    public partial class LocationDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DistrictField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LandLotIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SettlementField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StreetField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string District {
            get {
                return this.DistrictField;
            }
            set {
                if ((object.ReferenceEquals(this.DistrictField, value) != true)) {
                    this.DistrictField = value;
                    this.RaisePropertyChanged("District");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LandLotId {
            get {
                return this.LandLotIdField;
            }
            set {
                if ((this.LandLotIdField.Equals(value) != true)) {
                    this.LandLotIdField = value;
                    this.RaisePropertyChanged("LandLotId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Region {
            get {
                return this.RegionField;
            }
            set {
                if ((object.ReferenceEquals(this.RegionField, value) != true)) {
                    this.RegionField = value;
                    this.RaisePropertyChanged("Region");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Settlement {
            get {
                return this.SettlementField;
            }
            set {
                if ((object.ReferenceEquals(this.SettlementField, value) != true)) {
                    this.SettlementField = value;
                    this.RaisePropertyChanged("Settlement");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Street {
            get {
                return this.StreetField;
            }
            set {
                if ((object.ReferenceEquals(this.StreetField, value) != true)) {
                    this.StreetField = value;
                    this.RaisePropertyChanged("Street");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MonetaryValuationDTO", Namespace="http://schemas.datacontract.org/2004/07/Service.DTO")]
    [System.SerializableAttribute()]
    public partial class MonetaryValuationDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double KfField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double KmField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LandLotIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Kf {
            get {
                return this.KfField;
            }
            set {
                if ((this.KfField.Equals(value) != true)) {
                    this.KfField = value;
                    this.RaisePropertyChanged("Kf");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Km {
            get {
                return this.KmField;
            }
            set {
                if ((this.KmField.Equals(value) != true)) {
                    this.KmField = value;
                    this.RaisePropertyChanged("Km");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LandLotId {
            get {
                return this.LandLotIdField;
            }
            set {
                if ((this.LandLotIdField.Equals(value) != true)) {
                    this.LandLotIdField = value;
                    this.RaisePropertyChanged("LandLotId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Value {
            get {
                return this.ValueField;
            }
            set {
                if ((this.ValueField.Equals(value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StateRegistrationInfoDTO", Namespace="http://schemas.datacontract.org/2004/07/Service.DTO")]
    [System.SerializableAttribute()]
    public partial class StateRegistrationInfoDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LandLotIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegistrationAgencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TechnicalDocumentationField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateTime {
            get {
                return this.DateTimeField;
            }
            set {
                if ((this.DateTimeField.Equals(value) != true)) {
                    this.DateTimeField = value;
                    this.RaisePropertyChanged("DateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LandLotId {
            get {
                return this.LandLotIdField;
            }
            set {
                if ((this.LandLotIdField.Equals(value) != true)) {
                    this.LandLotIdField = value;
                    this.RaisePropertyChanged("LandLotId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RegistrationAgency {
            get {
                return this.RegistrationAgencyField;
            }
            set {
                if ((object.ReferenceEquals(this.RegistrationAgencyField, value) != true)) {
                    this.RegistrationAgencyField = value;
                    this.RaisePropertyChanged("RegistrationAgency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TechnicalDocumentation {
            get {
                return this.TechnicalDocumentationField;
            }
            set {
                if ((object.ReferenceEquals(this.TechnicalDocumentationField, value) != true)) {
                    this.TechnicalDocumentationField = value;
                    this.RaisePropertyChanged("TechnicalDocumentation");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PhysicalIndividualDTO", Namespace="http://schemas.datacontract.org/2004/07/Service.DTO")]
    [System.SerializableAttribute()]
    public partial class PhysicalIndividualDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateOfBirthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MiddleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SurnameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateOfBirth {
            get {
                return this.DateOfBirthField;
            }
            set {
                if ((this.DateOfBirthField.Equals(value) != true)) {
                    this.DateOfBirthField = value;
                    this.RaisePropertyChanged("DateOfBirth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MiddleName {
            get {
                return this.MiddleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MiddleNameField, value) != true)) {
                    this.MiddleNameField = value;
                    this.RaisePropertyChanged("MiddleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Surname {
            get {
                return this.SurnameField;
            }
            set {
                if ((object.ReferenceEquals(this.SurnameField, value) != true)) {
                    this.SurnameField = value;
                    this.RaisePropertyChanged("Surname");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="JuridicalIndividualDTO", Namespace="http://schemas.datacontract.org/2004/07/Service.DTO")]
    [System.SerializableAttribute()]
    public partial class JuridicalIndividualDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EDRPOUcodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EDRPOUcode {
            get {
                return this.EDRPOUcodeField;
            }
            set {
                if ((object.ReferenceEquals(this.EDRPOUcodeField, value) != true)) {
                    this.EDRPOUcodeField = value;
                    this.RaisePropertyChanged("EDRPOUcode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LandCategoryDTO", Namespace="http://schemas.datacontract.org/2004/07/Service.DTO")]
    [System.SerializableAttribute()]
    public partial class LandCategoryDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SoilDTO", Namespace="http://schemas.datacontract.org/2004/07/Service.DTO")]
    [System.SerializableAttribute()]
    public partial class SoilDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AgroGroupCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AgroGroupCode {
            get {
                return this.AgroGroupCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.AgroGroupCodeField, value) != true)) {
                    this.AgroGroupCodeField = value;
                    this.RaisePropertyChanged("AgroGroupCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullName {
            get {
                return this.FullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FullNameField, value) != true)) {
                    this.FullNameField = value;
                    this.RaisePropertyChanged("FullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OwnershipTypeDTO", Namespace="http://schemas.datacontract.org/2004/07/Service.DTO")]
    [System.SerializableAttribute()]
    public partial class OwnershipTypeDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PurposeDTO", Namespace="http://schemas.datacontract.org/2004/07/Service.DTO")]
    [System.SerializableAttribute()]
    public partial class PurposeDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullName {
            get {
                return this.FullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FullNameField, value) != true)) {
                    this.FullNameField = value;
                    this.RaisePropertyChanged("FullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.ILandService")]
    public interface ILandService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILandService/AddLandLot", ReplyAction="http://tempuri.org/ILandService/AddLandLotResponse")]
        void AddLandLot(UI.ServiceReference1.LandLotDTO landLotDTO, UI.ServiceReference1.ExploitationTypeDTO exploitationTypeDTO, UI.ServiceReference1.LocationDTO locationDTO, UI.ServiceReference1.MonetaryValuationDTO monetaryValuationDTO, UI.ServiceReference1.StateRegistrationInfoDTO stateRegistrationInfoDTO, UI.ServiceReference1.PhysicalIndividualDTO[] physicalIndividualDTOs, UI.ServiceReference1.JuridicalIndividualDTO juridicalIndividualDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILandService/AddLandLot", ReplyAction="http://tempuri.org/ILandService/AddLandLotResponse")]
        System.Threading.Tasks.Task AddLandLotAsync(UI.ServiceReference1.LandLotDTO landLotDTO, UI.ServiceReference1.ExploitationTypeDTO exploitationTypeDTO, UI.ServiceReference1.LocationDTO locationDTO, UI.ServiceReference1.MonetaryValuationDTO monetaryValuationDTO, UI.ServiceReference1.StateRegistrationInfoDTO stateRegistrationInfoDTO, UI.ServiceReference1.PhysicalIndividualDTO[] physicalIndividualDTOs, UI.ServiceReference1.JuridicalIndividualDTO juridicalIndividualDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILandService/GetLandCategoryById", ReplyAction="http://tempuri.org/ILandService/GetLandCategoryByIdResponse")]
        UI.ServiceReference1.LandCategoryDTO GetLandCategoryById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILandService/GetLandCategoryById", ReplyAction="http://tempuri.org/ILandService/GetLandCategoryByIdResponse")]
        System.Threading.Tasks.Task<UI.ServiceReference1.LandCategoryDTO> GetLandCategoryByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILandService/GetLandLotsbyLandCategory", ReplyAction="http://tempuri.org/ILandService/GetLandLotsbyLandCategoryResponse")]
        UI.ServiceReference1.LandLotDTO[] GetLandLotsbyLandCategory(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILandService/GetLandLotsbyLandCategory", ReplyAction="http://tempuri.org/ILandService/GetLandLotsbyLandCategoryResponse")]
        System.Threading.Tasks.Task<UI.ServiceReference1.LandLotDTO[]> GetLandLotsbyLandCategoryAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILandService/GetLandCategories", ReplyAction="http://tempuri.org/ILandService/GetLandCategoriesResponse")]
        UI.ServiceReference1.LandCategoryDTO[] GetLandCategories();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILandService/GetLandCategories", ReplyAction="http://tempuri.org/ILandService/GetLandCategoriesResponse")]
        System.Threading.Tasks.Task<UI.ServiceReference1.LandCategoryDTO[]> GetLandCategoriesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILandService/GetSoils", ReplyAction="http://tempuri.org/ILandService/GetSoilsResponse")]
        UI.ServiceReference1.SoilDTO[] GetSoils();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILandService/GetSoils", ReplyAction="http://tempuri.org/ILandService/GetSoilsResponse")]
        System.Threading.Tasks.Task<UI.ServiceReference1.SoilDTO[]> GetSoilsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILandService/GetOwnershipTypes", ReplyAction="http://tempuri.org/ILandService/GetOwnershipTypesResponse")]
        UI.ServiceReference1.OwnershipTypeDTO[] GetOwnershipTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILandService/GetOwnershipTypes", ReplyAction="http://tempuri.org/ILandService/GetOwnershipTypesResponse")]
        System.Threading.Tasks.Task<UI.ServiceReference1.OwnershipTypeDTO[]> GetOwnershipTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILandService/GetPurposes", ReplyAction="http://tempuri.org/ILandService/GetPurposesResponse")]
        UI.ServiceReference1.PurposeDTO[] GetPurposes(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILandService/GetPurposes", ReplyAction="http://tempuri.org/ILandService/GetPurposesResponse")]
        System.Threading.Tasks.Task<UI.ServiceReference1.PurposeDTO[]> GetPurposesAsync(string name);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILandServiceChannel : UI.ServiceReference1.ILandService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LandServiceClient : System.ServiceModel.ClientBase<UI.ServiceReference1.ILandService>, UI.ServiceReference1.ILandService {
        
        public LandServiceClient() {
        }
        
        public LandServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LandServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LandServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LandServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void AddLandLot(UI.ServiceReference1.LandLotDTO landLotDTO, UI.ServiceReference1.ExploitationTypeDTO exploitationTypeDTO, UI.ServiceReference1.LocationDTO locationDTO, UI.ServiceReference1.MonetaryValuationDTO monetaryValuationDTO, UI.ServiceReference1.StateRegistrationInfoDTO stateRegistrationInfoDTO, UI.ServiceReference1.PhysicalIndividualDTO[] physicalIndividualDTOs, UI.ServiceReference1.JuridicalIndividualDTO juridicalIndividualDTO) {
            base.Channel.AddLandLot(landLotDTO, exploitationTypeDTO, locationDTO, monetaryValuationDTO, stateRegistrationInfoDTO, physicalIndividualDTOs, juridicalIndividualDTO);
        }
        
        public System.Threading.Tasks.Task AddLandLotAsync(UI.ServiceReference1.LandLotDTO landLotDTO, UI.ServiceReference1.ExploitationTypeDTO exploitationTypeDTO, UI.ServiceReference1.LocationDTO locationDTO, UI.ServiceReference1.MonetaryValuationDTO monetaryValuationDTO, UI.ServiceReference1.StateRegistrationInfoDTO stateRegistrationInfoDTO, UI.ServiceReference1.PhysicalIndividualDTO[] physicalIndividualDTOs, UI.ServiceReference1.JuridicalIndividualDTO juridicalIndividualDTO) {
            return base.Channel.AddLandLotAsync(landLotDTO, exploitationTypeDTO, locationDTO, monetaryValuationDTO, stateRegistrationInfoDTO, physicalIndividualDTOs, juridicalIndividualDTO);
        }
        
        public UI.ServiceReference1.LandCategoryDTO GetLandCategoryById(int id) {
            return base.Channel.GetLandCategoryById(id);
        }
        
        public System.Threading.Tasks.Task<UI.ServiceReference1.LandCategoryDTO> GetLandCategoryByIdAsync(int id) {
            return base.Channel.GetLandCategoryByIdAsync(id);
        }
        
        public UI.ServiceReference1.LandLotDTO[] GetLandLotsbyLandCategory(string name) {
            return base.Channel.GetLandLotsbyLandCategory(name);
        }
        
        public System.Threading.Tasks.Task<UI.ServiceReference1.LandLotDTO[]> GetLandLotsbyLandCategoryAsync(string name) {
            return base.Channel.GetLandLotsbyLandCategoryAsync(name);
        }
        
        public UI.ServiceReference1.LandCategoryDTO[] GetLandCategories() {
            return base.Channel.GetLandCategories();
        }
        
        public System.Threading.Tasks.Task<UI.ServiceReference1.LandCategoryDTO[]> GetLandCategoriesAsync() {
            return base.Channel.GetLandCategoriesAsync();
        }
        
        public UI.ServiceReference1.SoilDTO[] GetSoils() {
            return base.Channel.GetSoils();
        }
        
        public System.Threading.Tasks.Task<UI.ServiceReference1.SoilDTO[]> GetSoilsAsync() {
            return base.Channel.GetSoilsAsync();
        }
        
        public UI.ServiceReference1.OwnershipTypeDTO[] GetOwnershipTypes() {
            return base.Channel.GetOwnershipTypes();
        }
        
        public System.Threading.Tasks.Task<UI.ServiceReference1.OwnershipTypeDTO[]> GetOwnershipTypesAsync() {
            return base.Channel.GetOwnershipTypesAsync();
        }
        
        public UI.ServiceReference1.PurposeDTO[] GetPurposes(string name) {
            return base.Channel.GetPurposes(name);
        }
        
        public System.Threading.Tasks.Task<UI.ServiceReference1.PurposeDTO[]> GetPurposesAsync(string name) {
            return base.Channel.GetPurposesAsync(name);
        }
    }
}
